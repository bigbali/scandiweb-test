.product-price-label {
    font-family: "Roboto Condensed";
    font-size: 18px;
    margin-top: 43px;
    margin-bottom: 0;
    text-transform: uppercase;
}

.product-price {
    //font-family: "Roboto Condensed";
    font-weight: 700;
    font-size: 24px;
    margin-top: 1rem;
}

.product-title {
    margin: 0;
    margin-bottom: 5px;
}

.product-subtitle {
    margin: 0;
}

.product-description {
    padding-top: 1rem;

    p:first-of-type {
        margin-top: 0;
    }

    * {
        font-family: "Roboto";
        font-size: 1rem;
    }
}

.attribute-items-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: auto;
    grid-gap: 12px;
}

.attribute-name {
    font-family: "Roboto Condensed";
    font-size: 18px;
    margin: 0;
    margin-top: 43px;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
}


.attribute-item {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    min-width: 4rem;
    border: 1px solid var(--color-dark-primary);
    background-color: white;
    font-family: "Source Sans Pro";
    font-size: 1rem;
    transition: filter 0.1s;
    cursor: pointer;
    user-select: none;

    &:hover {
        filter: brightness(0.7);
    }

    &.invert-color {
        color: var(--color-light-primary);
    }

    &.selected {
        &.text {
            color: var(--color-light-primary);
            // We use '!important' because we want to override inline style which sets background color
            background-color: var(--color-dark-primary) !important;
        }

        &.swatch {
            // Why use an outline? Because we don't want to change the swatch color, even when selected.
            // And yet... we somehow need to tell the user what is selected.
            outline: 3px solid var(--color-theme);
        }
    }
}

// Button component doesn't have width set, so we set it here
.button {
    width: 100%;
}